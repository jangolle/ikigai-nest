version: '3.5'

services:
  app: &default-app
    build:
      dockerfile: Dockerfile
      context: .
      # Only will build development stage from our dockerfile
      target: development
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules # exclude node modules
    env_file:
      - .env
    # Run a command against the development stage of the image
    command: yarn start:docker:dev
    ports:
      - ${APP_PORT}:${APP_PORT}
    depends_on:
      - db
      - cache

  jobs:
    <<: *default-app
    ports: []
    command: yarn start:docker:jobs

  processors:
    <<: *default-app
    ports: []
    command: yarn start:docker:processors

  db:
    image: mysql:8.0
    restart: always
    hostname: ${MYSQL_HOST}
    volumes:
      - ./init:/docker-entrypoint-initdb.d
      - ./.volumes/db/data:/var/lib/mysql
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"
    environment:
      MYSQL_TCP_PORT: ${MYSQL_PORT}
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB_NAME}
    user: 'mysql'

  cache:
    image: redis:7.0-alpine
    restart: always
    hostname: ${REDIS_HOST}
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 30s
    volumes:
      - ./.volumes/cache/data:/data
